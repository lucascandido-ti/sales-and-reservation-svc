service: sales-and-reservations

provider:
  name: aws
  runtime: nodejs22.x
  stage: dev
  region: us-east-1
  iam:
    role:
      statements:
        # Permissões para SQS
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
          Resource:
            - arn:aws:sqs:${self:provider.region}:${aws:accountId}:vehicle-catalog-service-queue-${self:provider.stage}
        # Permissões para SNS
        - Effect: Allow
          Action:
            - sns:Publish
          Resource:
            - arn:aws:sns:${self:provider.region}:${aws:accountId}:vehicle-catalog-service-topic-${self:provider.stage}
        # Permissões para SES
        - Effect: Allow
          Action:
            - ses:SendEmail
            - ses:SendRawEmail
          Resource: "*"
        - Effect: Allow
          Action:
            - "events:PutRule"
            - "events:PutTargets"
          Resource: "*"
  environment:
    EVENT_BUS_NAME: payment-service-${self:provider.stage}-event-bus
    VEHICLE_API_BASE_URL: https://${hash_lambda}.execute-api.${self:provider.region}.amazonaws.com/dev/vehicle
    SQS_QUEUE_URL: https://sqs.${self:provider.region}.amazonaws.com/${aws:accountId}/vehicle-catalog-service-queue-${self:provider.stage}
    SNS_TOPIC_ARN: arn:aws:sns:${self:provider.region}:${aws:accountId}:vehicle-catalog-service-topic-${self:provider.stage}
    DB_HOST: localhost
    DB_USER: postgres
    DB_PASSWORD: admintest
    DB_NAME: postgres
    DB_PORT: 5432

functions:
  reserveVehicle:
    handler: src/handlers/ReserveVehicle.handler
    description: Create New Reserve
    environment:
      VEHICLE_API_BASE_URL: https://${hash_lambda}.execute-api.${self:provider.region}.amazonaws.com/dev/vehicle
      SQS_QUEUE_URL: https://sqs.${self:provider.region}.amazonaws.com/${aws:accountId}/vehicle-catalog-service-queue-${self:provider.stage}
      SNS_TOPIC_ARN: arn:aws:sns:${self:provider.region}:${aws:accountId}:vehicle-catalog-service-topic-${self:provider.stage}
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASSWORD: admintest
      DB_NAME: postgres
      DB_PORT: 5432
    events:
      - http:
          path: reservation
          method: post
          cors: true

  saleVehicle:
    handler: src/handlers/SaleVehicle.handler
    description: Create New Sales Request
    environment:
      VEHICLE_API_BASE_URL: https://${hash_lambda}.execute-api.${self:provider.region}.amazonaws.com/dev/vehicle
      SQS_QUEUE_URL: https://sqs.${self:provider.region}.amazonaws.com/${aws:accountId}/vehicle-catalog-service-queue-${self:provider.stage}
      SNS_TOPIC_ARN: arn:aws:sns:${self:provider.region}:${aws:accountId}:vehicle-catalog-service-topic-${self:provider.stage}
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASSWORD: admintest
      DB_NAME: postgres
      DB_PORT: 5432
    events:
      - http:
          path: sale
          method: post
          cors: true

  paymentConfirmation:
    handler: src/events/PaymentConfirmation.handler
    environment:
      EVENT_BUS_NAME: ${self:service}-${self:provider.stage}-event-bus
      VEHICLE_API_BASE_URL: https://${hash_lambda}.execute-api.${self:provider.region}.amazonaws.com/dev/vehicle
      SQS_QUEUE_URL: https://sqs.${self:provider.region}.amazonaws.com/${aws:accountId}/vehicle-catalog-service-queue-${self:provider.stage}
      SNS_TOPIC_ARN: arn:aws:sns:${self:provider.region}:${aws:accountId}:vehicle-catalog-service-topic-${self:provider.stage}
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASSWORD: admintest
      DB_NAME: postgres
      DB_PORT: 5432
    events:
      - eventBridge:
          eventBus: arn:aws:events:${self:provider.region}:${aws:accountId}:event-bus/payment-service-${self:provider.stage}-event-bus
          pattern:
            source:
              - payment.service
            detail-type:
              - PaymentCompleted
              - PaymentFailed
